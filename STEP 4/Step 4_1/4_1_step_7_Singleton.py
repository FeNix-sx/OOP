"""
Видео-разбор подвига (решение смотреть только после своей попытки): https://youtu.be/PxOfMkw962E

Подвиг 7. С помощью наследования можно как бы "наполнять" дочерние классы нужными
качествами (свойствами). Как пример, объявите в программе класс с именем:

Singleton

который бы позволял создавать только один экземпляр (все последующие экземпляры должны
ссылаться на первый). Как это делать, вы должны уже знать из этого курса.

Затем, объявите еще один класс с именем:

Game

который бы наследовался от класса Singleton. Объекты класса Game должны
создаваться командой:

game = Game(name)
где name - название игры (строка). В каждом объекте класса Game должен создаваться
атрибут name с соответствующим содержимым.

Убедитесь, что атрибут name принимает значение первого созданного объекта (если это не так,
то поправьте инициализатор дочернего класса, чтобы это условие выполнялось).

P.S. В программе нужно объявить только классы. Выводить на экран ничего не нужно.
"""
class Singleton:
    __instance = None

    def __new__(cls, *args, **kwargs):
        if not cls.__instance:
            cls.__instance = super().__new__(cls)

        return cls.__instance

    def __init__(self, name):
        if not getattr(self, "name", False):
            self.name = name



class Game(Singleton):
    pass

game = Game('name')
game2 = Game('43')
print(game2.name)